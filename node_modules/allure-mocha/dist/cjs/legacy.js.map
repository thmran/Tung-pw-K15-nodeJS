{"version":3,"file":"legacy.js","names":["_allureJsCommons","_interopRequireWildcard","require","commons","_sdk","_reporter","_legacyUtils","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","LegacyAllureApi","constructor","epic","Promise","resolve","feature","story","name","suite","parentSuite","subSuite","label","options","parameter","serialize","url","type","link","issue","tms","markdown","description","html","descriptionHtml","owner","severity","layer","allureId","tag","info","_getLegacyApiRuntime","getLegacyApiRuntime","writeEnvironmentInfo","categories","_getLegacyApiRuntime2","writeCategoriesDefinitions","content","attachment","contentType","runtime","testAttachment","status","timestamp","Date","now","applyRuntimeMessages","data","start","Status","PASSED","stop","body","result","renameStep","addStepParameter","isPromise","then","v","stopStepSuccess","stopStepWithError","_getLegacyApiRuntime3","_getLegacyApiRuntime4","parameters","_getLegacyApiRuntime5","error","_getLegacyApiRuntime6","message","stack","getStatusFromError","statusDetails","trace","allure","exports"],"sources":["../../src/legacy.ts"],"sourcesContent":["import * as commons from \"allure-js-commons\";\nimport type { ContentType, ParameterOptions } from \"allure-js-commons\";\nimport { Status } from \"allure-js-commons\";\nimport type { Category } from \"allure-js-commons/sdk\";\nimport { getStatusFromError, isPromise } from \"allure-js-commons/sdk\";\nimport { serialize } from \"allure-js-commons/sdk/reporter\";\nimport { getLegacyApiRuntime } from \"./legacyUtils.js\";\n\ninterface StepInterface {\n  parameter(name: string, value: string): void;\n\n  name(name: string): void;\n}\n\ninterface AttachmentOptions {\n  contentType: ContentType | string;\n  fileExtension?: string;\n}\n\n// noinspection JSDeprecatedSymbols\n/**\n * @deprecated please use api exported by \"allure-js-commons\" instead.\n */\nclass LegacyAllureApi {\n  /**\n   * @deprecated please use import { epic } from \"allure-js-commons\" instead.\n   */\n  epic = (epic: string) => Promise.resolve(commons.epic(epic));\n  /**\n   * @deprecated please use import { feature } from \"allure-js-commons\" instead.\n   */\n  feature = (feature: string) => Promise.resolve(commons.feature(feature));\n  /**\n   * @deprecated please use import { story } from \"allure-js-commons\" instead.\n   */\n  story = (story: string) => Promise.resolve(commons.story(story));\n  /**\n   * @deprecated please use import { suite } from \"allure-js-commons\" instead.\n   */\n  suite = (name: string) => Promise.resolve(commons.suite(name));\n  /**\n   * @deprecated please use import { parentSuite } from \"allure-js-commons\" instead.\n   */\n  parentSuite = (name: string) => Promise.resolve(commons.parentSuite(name));\n  /**\n   * @deprecated please use import { subSuite } from \"allure-js-commons\" instead.\n   */\n  subSuite = (name: string) => Promise.resolve(commons.subSuite(name));\n  /**\n   * @deprecated please use import { label } from \"allure-js-commons\" instead.\n   */\n  label = (name: string, value: string) => Promise.resolve(commons.label(name, value));\n  /**\n   * @deprecated please use import { parameter } from \"allure-js-commons\" instead.\n   */\n  parameter = (name: string, value: any, options?: ParameterOptions) =>\n    Promise.resolve(commons.parameter(name, serialize(value), options));\n  /**\n   * @deprecated please use import { link } from \"allure-js-commons\" instead.\n   */\n  link = (url: string, name?: string, type?: string) => Promise.resolve(commons.link(url, name, type));\n  /**\n   * @deprecated please use import { issue } from \"allure-js-commons\" instead.\n   */\n  issue = (name: string, url: string) => Promise.resolve(commons.issue(url, name));\n  /**\n   * @deprecated please use import { tms } from \"allure-js-commons\" instead.\n   */\n  tms = (name: string, url: string) => Promise.resolve(commons.tms(url, name));\n  /**\n   * @deprecated please use import { description } from \"allure-js-commons\" instead.\n   */\n  description = (markdown: string) => Promise.resolve(commons.description(markdown));\n  /**\n   * @deprecated please use import { descriptionHtml } from \"allure-js-commons\" instead.\n   */\n  descriptionHtml = (html: string) => Promise.resolve(commons.descriptionHtml(html));\n  /**\n   * @deprecated please use import { owner } from \"allure-js-commons\" instead.\n   */\n  owner = (owner: string) => Promise.resolve(commons.owner(owner));\n  /**\n   * @deprecated please use import { severity } from \"allure-js-commons\" instead.\n   */\n  severity = (severity: string) => Promise.resolve(commons.severity(severity));\n  /**\n   * @deprecated please use import { layer } from \"allure-js-commons\" instead.\n   */\n  layer = (layer: string) => Promise.resolve(commons.layer(layer));\n  /**\n   * @deprecated please use import { allureId } from \"allure-js-commons\" instead.\n   */\n  id = (allureId: string) => Promise.resolve(commons.allureId(allureId));\n  /**\n   * @deprecated please use import { tag } from \"allure-js-commons\" instead.\n   */\n  tag = (tag: string) => Promise.resolve(commons.tag(tag));\n  /**\n   * @deprecated please use the `environmentInfo` config option instead.\n   */\n  writeEnvironmentInfo = (info: Record<string, string>) => {\n    getLegacyApiRuntime()?.writeEnvironmentInfo(info);\n  };\n  /**\n   * @deprecated please use the `categories` config option instead.\n   */\n  writeCategoriesDefinitions = (categories: Category[]) => {\n    getLegacyApiRuntime()?.writeCategoriesDefinitions(categories);\n  };\n  /**\n   * @deprecated please use import { attachment } from \"allure-js-commons\" instead.\n   */\n  attachment = (name: string, content: Buffer | string, options: ContentType | string | AttachmentOptions) =>\n    Promise.resolve(\n      commons.attachment(name, content, typeof options === \"string\" ? { contentType: options } : options),\n    );\n  /**\n   * @deprecated please use import { attachment } from \"allure-js-commons\" instead.\n   */\n  testAttachment = (name: string, content: Buffer | string, options: ContentType | string | AttachmentOptions) => {\n    const runtime = getLegacyApiRuntime();\n    runtime.testAttachment(name, content, options);\n  };\n  /**\n   * @deprecated please use import { step } from \"allure-js-commons\" instead.\n   */\n  logStep = (name: string, status?: Status) => {\n    const runtime = getLegacyApiRuntime();\n    const timestamp = Date.now();\n    runtime?.applyRuntimeMessages(\n      {\n        type: \"step_start\",\n        data: {\n          name,\n          start: timestamp,\n        },\n      },\n      {\n        type: \"step_stop\",\n        data: {\n          status: status ?? Status.PASSED,\n          stop: timestamp,\n        },\n      },\n    );\n  };\n\n  // It's sync-first. That's why we can't simply reuse commons.step.\n  /**\n   * @deprecated please use import { step } from \"allure-js-commons\" instead.\n   */\n  step = <T>(name: string, body: (step: StepInterface) => T): T => {\n    const runtime = getLegacyApiRuntime();\n    runtime?.applyRuntimeMessages({\n      type: \"step_start\",\n      data: {\n        name,\n        start: Date.now(),\n      },\n    });\n    try {\n      const result = body({\n        name: this.renameStep,\n        parameter: this.addStepParameter,\n      });\n      if (isPromise(result)) {\n        return result.then(\n          (v) => {\n            this.stopStepSuccess();\n            return v;\n          },\n          (e) => {\n            this.stopStepWithError(e);\n            throw e;\n          },\n        ) as T;\n      }\n      this.stopStepSuccess();\n      return result;\n    } catch (e) {\n      this.stopStepWithError(e);\n      throw e;\n    }\n  };\n\n  private renameStep = (name: string) => {\n    getLegacyApiRuntime()?.applyRuntimeMessages({\n      type: \"step_metadata\",\n      data: { name },\n    });\n  };\n\n  private addStepParameter = (name: string, value: string) => {\n    getLegacyApiRuntime()?.applyRuntimeMessages({\n      type: \"step_metadata\",\n      data: {\n        parameters: [{ name, value }],\n      },\n    });\n  };\n\n  private stopStepSuccess = () => {\n    getLegacyApiRuntime()?.applyRuntimeMessages({\n      type: \"step_stop\",\n      data: {\n        status: Status.PASSED,\n        stop: Date.now(),\n      },\n    });\n  };\n\n  private stopStepWithError = (error: unknown) => {\n    const { message, stack } = error as Error;\n    getLegacyApiRuntime()?.applyRuntimeMessages({\n      type: \"step_stop\",\n      data: {\n        status: getStatusFromError(error as Error),\n        stop: Date.now(),\n        statusDetails: {\n          message,\n          trace: stack,\n        },\n      },\n    });\n  };\n}\n\nexport const allure = new LegacyAllureApi();\n"],"mappings":"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","ignoreList":[]}