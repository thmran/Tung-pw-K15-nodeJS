{"version":3,"file":"setupAllureMochaParallel.js","names":["_parallelBuffered","_interopRequireDefault","require","_AllureMochaReporter","e","__esModule","default","originalCreateListeners","ParallelBuffered","prototype","createListeners","runner","result","call","AllureMochaReporter","options"],"sources":["../../src/setupAllureMochaParallel.ts"],"sourcesContent":["import type * as Mocha from \"mocha\";\n// @ts-ignore\nimport { default as ParallelBuffered } from \"mocha/lib/nodejs/reporters/parallel-buffered.js\";\nimport { AllureMochaReporter } from \"./AllureMochaReporter.js\";\n\nconst originalCreateListeners: (runner: Mocha.Runner) => Mocha.reporters.Base =\n  ParallelBuffered.prototype.createListeners;\n\nParallelBuffered.prototype.createListeners = function (runner: Mocha.Runner) {\n  const result = originalCreateListeners.call(this, runner);\n  new AllureMochaReporter(runner, this.options as Mocha.MochaOptions, true);\n  return result;\n};\n"],"mappings":";;AAEA,IAAAA,iBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,oBAAA,GAAAD,OAAA;AAA+D,SAAAD,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAF/D;;AAIA,IAAMG,uBAAuE,GAC3EC,yBAAgB,CAACC,SAAS,CAACC,eAAe;AAE5CF,yBAAgB,CAACC,SAAS,CAACC,eAAe,GAAG,UAAUC,MAAoB,EAAE;EAC3E,IAAMC,MAAM,GAAGL,uBAAuB,CAACM,IAAI,CAAC,IAAI,EAAEF,MAAM,CAAC;EACzD,IAAIG,wCAAmB,CAACH,MAAM,EAAE,IAAI,CAACI,OAAO,EAAwB,IAAI,CAAC;EACzE,OAAOH,MAAM;AACf,CAAC","ignoreList":[]}