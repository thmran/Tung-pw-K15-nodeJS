{"version":3,"file":"setupAllureMochaParallel.js","names":["default","ParallelBuffered","AllureMochaReporter","originalCreateListeners","prototype","createListeners","runner","result","call","options"],"sources":["../../src/setupAllureMochaParallel.ts"],"sourcesContent":["import type * as Mocha from \"mocha\";\n// @ts-ignore\nimport { default as ParallelBuffered } from \"mocha/lib/nodejs/reporters/parallel-buffered.js\";\nimport { AllureMochaReporter } from \"./AllureMochaReporter.js\";\n\nconst originalCreateListeners: (runner: Mocha.Runner) => Mocha.reporters.Base =\n  ParallelBuffered.prototype.createListeners;\n\nParallelBuffered.prototype.createListeners = function (runner: Mocha.Runner) {\n  const result = originalCreateListeners.call(this, runner);\n  new AllureMochaReporter(runner, this.options as Mocha.MochaOptions, true);\n  return result;\n};\n"],"mappings":"AACA;AACA,SAASA,OAAO,IAAIC,gBAAgB,QAAQ,iDAAiD;AAC7F,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,IAAMC,uBAAuE,GAC3EF,gBAAgB,CAACG,SAAS,CAACC,eAAe;AAE5CJ,gBAAgB,CAACG,SAAS,CAACC,eAAe,GAAG,UAAUC,MAAoB,EAAE;EAC3E,IAAMC,MAAM,GAAGJ,uBAAuB,CAACK,IAAI,CAAC,IAAI,EAAEF,MAAM,CAAC;EACzD,IAAIJ,mBAAmB,CAACI,MAAM,EAAE,IAAI,CAACG,OAAO,EAAwB,IAAI,CAAC;EACzE,OAAOF,MAAM;AACf,CAAC","ignoreList":[]}